{
  "hash": "b4fbfbcae992fe641529e0d0fff13e95",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"STA 364 Midterm Exam\"\nsubtitle: \"Spring 2025\"\nauthor: \"REPLACE WITH NAME\"\nformat:\n  html:\n    embed-resources: true\n---\n\n\n\n#### Data qand Setup\n\nThe data is found in the *ffp3* package and is called *aus_vehicle_sales*. Use `?aus_vehicle_sales` to learn more about the data. For this exam, you will explore the *SUVs*. The data has been split into a training set and the whole data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fpp3)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'tsibble':\n  method               from \n  as_tibble.grouped_df dplyr\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching packages ──────────────────────────────────────────── fpp3 1.0.1 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n✔ tibble      3.2.1     ✔ tsibble     1.1.5\n✔ dplyr       1.1.4     ✔ tsibbledata 0.4.1\n✔ tidyr       1.3.1     ✔ feasts      0.4.1\n✔ lubridate   1.9.4     ✔ fable       0.4.1\n✔ ggplot2     3.5.1     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ───────────────────────────────────────────────── fpp3_conflicts ──\n✖ lubridate::date()    masks base::date()\n✖ dplyr::filter()      masks stats::filter()\n✖ tsibble::intersect() masks base::intersect()\n✖ tsibble::interval()  masks lubridate::interval()\n✖ dplyr::lag()         masks stats::lag()\n✖ tsibble::setdiff()   masks base::setdiff()\n✖ tsibble::union()     masks base::union()\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naus_suv <- aus_vehicle_sales |> \n  filter(Type == \"SUV\")|>\n  select(-Type)\n\nsuv_train <- \n  aus_suv |> \n  filter(year(Month) <= 2016)\n```\n:::\n\n\n\n#### Questions\n\n1.  Plot and discuss the time series. Use `autoplot`, `ggsubseries` and `gg_season` graphs.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n2.  Investigate if there is significant autocorrelation. Use `gg_lag()` and `ACF() |> autoplot()` to make the graphs. Does this information agree with your previous discussion in (1)?\n\n\n\n::: {.cell}\n\n:::\n\n\n\n3.  Using your already created graphs, is the relationship between season and trend additive or multiplicative? Explain. If multiplicative, explain what that implies about modeling and forecasting with your series.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n4.  Regardless of your previous answer, apply a log transformation on the Count and then do an STL decomposition on your series. Discuss if the decomposition components agree with your answers in (1) and (2). You will need `model(STL(log(Count))) |> components() |> autoplot()`.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n5.  The code below can be modified to fit all benchmark models and a decomposition model to forecast the number of SUV sales in Australia in the next 1 year. Discuss which methods are best and why.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n6.  Now, we want to compare models using metrics. Use the provided code to get model metrics, then choose the best model.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n7.  Using the chosen model form in (6), refit that type of model on the complete data and provide forecasts (plot) for 2018. You should use parts of the code provided above.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n8.  Assess the final chosen model. You may want the functions `gg_tsresiduals()`, `report()`, and `augment()`, to get information about the model and relevant plots, but you can also use others.\n\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}