{
  "hash": "6068e56a899270302cb745ae378ae841",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Homework 3\"\nsubtitle: \"Time Series Graphics Part 2\"\neval: false\n---\n\n\n\n\n\n# Getting started\n\n### Start with the following steps:\n\n-   Go to our RStudio Server at <http://turing.cornellcollege.edu:8787/>\n\n-   Open the respective file from the shared STA364_inst_files folder mentioned above. It will be named something like *hw-03_LAST_NAME.qmd*.\n\n-   Then you need to save your copy. Click *File -\\> Save as -\\> Navigate to the folder `STA364_Projects` (that we share) -\\> Change the \"LAST_NAME part of the file name to your last name -\\> Save*.\n\n-   Update the top of the document, called the `YAML,` with your name.\n\n# Homework Instructions\n\n::: callout-note\nBe sure to include the relevant R code and complete sentences answering each question (e.g., if I ask for the average, you can output the answer in R but **also** write a complete sentence with the answer). Be sure to save your files frequently!\n\nFrom this point forward, you need to start commenting on your graphs. What do you observe? Are there trends/cycles/seasonal effects? Outliers? Other interesting features?\n:::\n\nData for the homework is in the *STA364_inst_files \\> data* folder.\n\n# Exercises\n\n### Question 1 (fpp7)\n\n1.  Monthly Australian retail data is provided in `aus_retail`. Select one of the time series as follows (but choose a different seed value):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345678)\nmyseries <- aus_retail |>\n  filter(`Series ID` == sample(aus_retail$`Series ID`,1))\n```\n:::\n\n\n\nExplore your chosen retail time series using the following functions: `autoplot`, `gg_season()`, `gg_subseries()`, `gg_lag()`, `ACF()|>autoplot()`.\n\n### Question 2 (fpp8)\n\n2.  Use the following graphics functions: `autoplot()`, `gg_season()`, `gg_subseries()`, `gg_lag()`, `ACF()` and explore features from the following time series: “Total Private” Employed from *us_employment*, Bricks from *aus_production*, Hare from *pelt*, “H02” Cost from *PBS*, and Barrels from *us_gasoline*.\n\n<!-- -->\n\na.  Can you spot any seasonality, cyclicity, or trend?\n\nb.  What do you learn about the series?\n\nc.  What can you say about the seasonal patterns?\n\nd.  Can you identify any unusual years?\n\n### Question 3 (fpp10)\n\n3.  The *aus_livestock* data contains the monthly total number of pigs slaughtered in Victoria, Australia, from Jul 1972 to Dec 2018. Use `filter()` to extract pig slaughters in Victoria between 1990 and 1995. Use `autoplot()` and `ACF()` for this data. How do they differ from white noise? If a more extended period of data is used, what difference does it make to the ACF?\n\n### Question 4 (fpp11)\n\n4.  \n\n    a.  Use the following code to compute the daily changes in Google closing stock prices. Explain what lines 2 through 5 are doing.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndgoog <- gafa_stock |>                                    # line 1\n  filter(Symbol == \"GOOG\", year(Date) >= 2018) |>         # line 2\n  mutate(trading_day = row_number()) |>                   # line 3\n  update_tsibble(index = trading_day, regular = TRUE) |>  # line 4\n  mutate(diff = difference(Close))                        # line 5\n```\n:::\n\n\n\nb.  Why was it necessary to re-index the tsibble?\n\nc.  Plot these differences and their ACF.\n\nd.  Do the changes in the stock prices look like white noise?\n\n# Submission\n\nWhen you are finished with your homework, be sure to Render the final document. Once rendered, you can download your file by:\n\n-   Finding the .html file in your File pane of RStudio (on the bottom right of the screen)\n-   Click the check box next to the file\n-   Click the blue gear above and then click \"Export\" to download\n-   Submit your final HTML document to the respective assignment on [Moodle]({{< var course.moodle >}})\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}