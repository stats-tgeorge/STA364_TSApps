{
  "hash": "f1c6dd1d0230cb19aa7d92e5e1214f7b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Homework 5\"\nsubtitle: \"The Forecaster's Toolbox\"\neval: false\n---\n\n\n\n\n\n# Getting started\n\n### Start with the following steps:\n\n-   Go to our RStudio Server at <http://turing.cornellcollege.edu:8787/>\n\n-   Open the respective file from the shared STA364_inst_files folder mentioned above. It will be named something like *hw-0X_LAST_NAME.qmd*.\n\n-   Then you need to save your copy. Click *File -\\> Save as -\\> Navigate to the folder `STA364_Projects` (that we share) -\\> Change the \"LAST_NAME part of the file name to your last name -\\> Save*.\n\n-   Update the top of the document, called the `YAML,` with your name.\n\n# Homework Instructions\n\n::: callout-note\nBe sure to include the relevant R code and complete sentences answering each question (e.g., if I ask for the average, you can output the answer in R but **also** write a complete sentence with the answer). Be sure to save your files frequently!\n\nFrom this point forward, you need to start commenting on your graphs. What do you observe? Are there trends/cycles/seasonal effects? Outliers? Other interesting features?\n:::\n\n::: callout-important\nYou will now need to make your own R chunks for problems that require code. You should name each chunk appropriately, for example, `q1_a`. This process assures that when you render and get an error, the error tells you which chunk is causing the error. You **cannot** use duplicate chunk labels.\n\n\\`\\`\\`{r q1_a}\n\n\\`\\`\\`\n\n:::\n\nData for the homework is in the *STA364_inst_files \\> data* folder.\n\n# Exercises\n\n\n## Reading\n\nRead 5.1, 5.2, and 5.8. \n\n## Problems\n\n### Question 1 (fpp5_1)\n\nPlot the time series and produce forecasts for the following series using whichever of `NAIVE(y)`, `SNAIVE(y)` or `RW(y ~ drift())` is more appropriate in each case. Explain your choice in each case with 1 sentence. \n\na. Australian Population (*global_economy*)\nb. Bricks (*aus_production*)\nc. NSW Lambs (*aus_livestock*). NSW stands for new south wales, use a filter on territory.\nd. Household wealth (*hh_budget*). Choose a country with a filter.\n\n\n### Question 2 (fpp5_2)\n\nUse the Facebook stock price (data set *gafa_stock*) to do the following:\n\na. Produce a time plot of the series.\n\nb. Produce forecasts using the drift method and plot them.\n\nc. Show that the forecasts are identical to extending the line drawn between the first and last observations.\n\n### Question 3 (fpp5_3)\n\nApply a seasonal naïve method to the quarterly Australian beer production data from 1992. Check if the residuals look like white noise, and plot the forecasts. The following code will help.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract data of interest\nrecent_production <- aus_production |>\n  filter(year(Quarter) >= 1992)\n# Define and estimate a model\nfit <- recent_production |> model(SNAIVE(Beer))\n# Look at the residuals\nfit |> gg_tsresiduals()\n# Look a some forecasts\nfit |> forecast() |> autoplot(recent_production)\n```\n:::\n\n\n\nDiscuss quality of this model using the residuals. \n\n\n### Question 4 (fpp5_6)\n\nAre the following statements true or false? Explain your answer.\n\n- Good forecast methods should have normally distributed residuals.\n- A model with small residuals will give good forecasts.\n- The best measure of forecast accuracy is MAPE.\n- If your model doesn’t forecast well, you should make it more complicated.\n- Always choose the model with the best forecast accuracy as measured on the test set.\n\n\n### Question 5 (fpp5_7)\n\nMonthly Australian retail data is provided in *aus_retail*. Select one of the time series as follows (but choose your own seed value):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345678)\nmyseries <- aus_retail |>\n  filter(`Series ID` == sample(aus_retail$`Series ID`,1))\n```\n:::\n\n\n\na. Create a training dataset consisting of observations before 2011 using\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyseries_train <- myseries |>\n  filter(year(Month) < 2011)\n```\n:::\n\n\n\n\nb. Check that your data have been split appropriately by producing the following plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(myseries, Turnover) +\n  autolayer(myseries_train, Turnover, colour = \"red\")\n```\n:::\n\n\n\nc. Fit a seasonal naïve model using `SNAIVE()` applied to your training data (*myseries_train*).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- myseries_train |>\n  model(SNAIVE())\n```\n:::\n\n\n\nd. Check the residuals.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |> gg_tsresiduals()\n```\n:::\n\n\n\nDo the residuals appear to be uncorrelated and normally distributed?\n\ne. Produce forecasts for the test data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfc <- fit |>\n  forecast(new_data = anti_join(myseries, myseries_train))\nfc |> autoplot(myseries)\n```\n:::\n\n\n\nf. Compare the accuracy of your forecasts against the actual values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |> accuracy()\nfc |> accuracy(myseries)\n```\n:::\n\n\n\ng. How sensitive are the accuracy measures to the amount of training data used? You will need to copy some of your code above and play around with the amount of data held out and the amount used to check the forecast. Make sure to answer this using a metric that does not depend on the amount of data in your testing set. \n\n\n### Question 6 (fpp5_9)\n\na. Create a training set for household wealth (*hh_budget*) by withholding the last four years as a test set and choosing a country with a filter. \n\nb. Fit **all** the appropriate benchmark methods to the training set and forecast the periods covered by the test set.\n\nc. Compute the accuracy of your forecasts. Which method does best?\n\nd. Do the residuals from the best method resemble white noise?\n\n\n\n### Question 7 (fpp5_11)\n\n\nWe will use the Bricks data from *aus_production* (Australian quarterly clay brick production 1956–2005) for this exercise.\n\na. Use an STL decomposition to calculate the trend-cycle and seasonal indices. (Experiment with having fixed or changing seasonality. This is changing the window in the `season()` function within the `STL()` function.)\n\nb. Compute and plot the seasonally adjusted data.\n\nc. Use a naïve method to produce forecasts of the seasonally adjusted data.\n\nd. Use `decomposition_model()` to reseasonalise the results, giving forecasts for the original data.\n\ne. Do the residuals look uncorrelated?\n\nf. Repeat with a robust STL decomposition. Does it make much difference?\n\ng. Compare forecasts from `decomposition_model()` with those from `SNAIVE()`, using a test set comprising the last 2 years of data. Which is better?\n\n\n# Submission\n\nWhen you are finished with your homework, be sure to Render the final document. Once rendered, you can download your file by:\n\n-   Finding the .html file in your File pane of RStudio (on the bottom right of the screen)\n-   Click the check box next to the file\n-   Click the blue gear above and then click \"Export\" to download\n-   Submit your final HTML document to the respective assignment on [Moodle]({{< var course.moodle >}})\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}